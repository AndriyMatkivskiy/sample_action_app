name: PR Checks Monitor

permissions:
  contents: write
  checks: write
  statuses: write
  pull-requests: write # write is required to add/removes labels from the given pull request (set to read if you don't want to use the labels feature of this action)

on:
  workflow_run:
    workflows: ["Lint check", "Format check", "Unit Tests"]
    types: [completed]

jobs:
  pr-checks-monitor:
    name: PR Checks Monitor
    runs-on: ubuntu-latest
    # Debug: always run but log the event type
    # if: ${{ github.event.workflow_run.event == 'pull_request' }}

    steps:
      - name: It works
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log(`Event type: ${context.payload.workflow_run.event}`);
            console.log(`Head branch: ${context.payload.workflow_run.head_branch}`);
            console.log(`Conclusion: ${context.payload.workflow_run.conclusion}`);

      # - name: Mark PR as Ready for Review
      #   uses: actions/github-script@v7
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       const pullRequests = context.payload.check_suite.pull_requests;
      #       const checkSuiteHeadSha = context.payload.check_suite.head_sha;

      #       for (const pr of pullRequests) {
      #         // Verify this check suite was run for this specific PR's head commit
      #         if (pr.head.sha !== checkSuiteHeadSha) {
      #           console.log(`Skipping PR #${pr.number} - check suite SHA mismatch`);
      #           continue;
      #         }

      #         // Check if PR is in draft state
      #         const { data: pullRequest } = await github.rest.pulls.get({
      #           owner: context.repo.owner,
      #           repo: context.repo.repo,
      #           pull_number: pr.number
      #         });

      #         if (pullRequest.draft) {
      #           console.log(`Marking PR #${pr.number} as in Ready For Review`);

      #           await github.rest.pulls.update({
      #             owner: context.repo.owner,
      #             repo: context.repo.repo,
      #             pull_number: pr.number,
      #             draft: false
      #           });

      #           console.log(`PR #${pr.number} marked as in Ready For Review`);
      #         } else {
      #           console.log(`PR #${pr.number} is already in Ready For Review`);
      #         }
      #       }
